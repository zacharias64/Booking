
@model List<Book.Models.BookList>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}

<h2>上架列表</h2>


@if (ViewBag.ResultMessage != null) //判斷如果有訊息，則顯示。
{
    @Html.Label("info", (string)ViewBag.ResultMessage, new { @class = "text-info" })

}


@*@Html.ActionLink("新增商品", "Create")*@

<table class="table">
    <thead>
        <tr>
            <td>商品圖</td>
            <td>編號</td>
            <td>名稱</td>
            <td>作者</td>
            <td>售價</td>
            <td>庫存</td>
        </tr>
    </thead>

    <tbody>
        @foreach (var pd in this.Model)
        {
            <tr>

                <td><img src="@pd.bURL" width="50" height="50" /></td>
                <td>@pd.bId</td>
                <td>@pd.bTitle</td>
                <td>@pd.bAuthor</td>
                <td>@pd.bMoney</td>
                <td>@pd.bQuan</td>

                <td>
                    @*在Index頁面中，新增[編輯]與[刪除]的ActionLink，幫助使用者轉導至對應頁面*@
                    @Html.ActionLink("編輯", "Edit", new { id = pd.bId }, new { @class = "cusbutton" })
                        
                </td>

                <td>
                    @*將原本使用ActionLink的刪除按鈕改為使用BeginForm(行25)，並且將id設定為隱藏欄位(行27)，按鈕改為直接使用HTML input元素，型態為submit*@
                    @*刪除是很重要的操作，如果使用者直接在網址列輸入網址就可以刪除的話，其實是很危險的一件事情，所以我們選擇使用Post來完成。*@
                    @using (Html.BeginForm("Delete", "Edit", FormMethod.Post, new { @class = "Delete" }))
                    {
                        @Html.Hidden("id", pd.bId)
                        <input type="submit" value="刪除" class="btn btn-default" />
                    }
                </td>

            </tr>
        }
    </tbody>
</table>